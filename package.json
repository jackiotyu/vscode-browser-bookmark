{
  "publisher": "jackiotyu",
  "name": "browser-bookmark",
  "displayName": "Browser Bookmark",
  "description": "esay use browser's bookmark",
  "version": "0.0.6",
  "engines": {
    "vscode": "^1.79.0"
  },
  "icon": "images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/jackiotyu/vscode-browser-bookmark.git"
  },
  "bugs": {
    "url": "https://github.com/jackiotyu/vscode-browser-bookmark/issues"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "bookmark",
    "chrome bookmark",
    "browse bookmark",
    "open bookmark"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "browser-bookmark.openLink",
        "title": "Open Link"
      },
      {
        "command": "browser-bookmark.copyLink",
        "title": "Copy Link"
      },
      {
        "command": "browser-bookmark.openInternal",
        "title": "Open in built-in browser"
      },
      {
        "command": "browser-bookmark.openExternal",
        "title": "Open in external browser"
      },
      {
        "command": "browser-bookmark.refresh",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "browser-bookmark.search",
        "title": "Search Bookmark",
        "icon": "$(search)"
      },
      {
        "command": "browser-bookmark.openSetting",
        "title": "Open Setting",
        "icon": "$(gear)"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "when": "view == chrome && viewItem == browser-bookmark.url",
          "command": "browser-bookmark.copyLink"
        },
        {
          "when": "view == chrome && viewItem == browser-bookmark.url",
          "command": "browser-bookmark.openInternal"
        },
        {
          "when": "view == chrome && viewItem == browser-bookmark.url",
          "command": "browser-bookmark.openExternal"
        }
      ],
      "view/title": [
        {
          "when": "view == chrome",
          "command": "browser-bookmark.refresh",
          "group": "navigation@1"
        },
        {
          "when": "view == chrome",
          "command": "browser-bookmark.search",
          "group": "navigation@2"
        },
        {
          "when": "view == chrome",
          "command": "browser-bookmark.openSetting",
          "group": "navigation@100"
        }
      ],
      "commandPalette": [
        {
          "command": "browser-bookmark.openLink",
          "when": "false"
        },
        {
          "command": "browser-bookmark.copyLink",
          "when": "false"
        },
        {
          "command": "browser-bookmark.openInternal",
          "when": "false"
        },
        {
          "command": "browser-bookmark.openExternal",
          "when": "false"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "icon": "images/icon.svg",
          "id": "BrowserBookmark",
          "title": "Browser Bookmark"
        }
      ]
    },
    "views": {
      "BrowserBookmark": [
        {
          "id": "chrome",
          "name": "chrome"
        }
      ]
    },
    "keybindings": {
      "mac": "Cmd+Shift+v",
      "win": "Ctrl+Shift+v",
      "linux": "Ctrl+Shift+v",
      "command": "browser-bookmark.search"
    },
    "configuration": {
      "title": "browser-bookmark",
      "properties": {
        "browser-bookmark.defaultOpenWith": {
          "scope": "application",
          "enum": ["internal", "external"],
          "enumDescriptions": [
            "open in internal Browser",
            "open bookmark in external browser"
          ],
          "default": "external",
          "description": "Set \"external\" to open bookmark in external browser, or \"internal\" to open in internal browser"
        },
        "browser-bookmark.internalBrowserOpenCommand": {
          "scope": "application",
          "type": "string",
          "default": "simpleBrowser.api.open",
          "description": "Configure command for open internal browser, default is \"simpleBrowser.api.open\". Make sure it works!"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "yarn run compile-tests && yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/ini": "^1.3.31",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/sql.js": "^1.4.4",
    "@types/vscode": "^1.79.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1"
  },
  "dependencies": {
    "fuse.js": "^6.6.2",
    "ini": "^4.1.1",
    "sql.js": "^1.8.0"
  }
}
